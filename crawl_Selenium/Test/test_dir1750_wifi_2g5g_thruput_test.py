# Generated by Selenium IDE
# 2019/10/11 Initial release 

import os,sys
import requests

strabspath=os.path.abspath(__file__)
strdirname=os.path.dirname(strabspath)
str_split=os.path.split(strdirname)
prevdirname=str_split[0]
dirnamelib=os.path.join(prevdirname,"lib")
dirnamelog=os.path.join(prevdirname,"logs")
sys.path.append(dirnamelib)

from logger import logger
from readConfig import *
from api_selenium import *
from api_selenium_dir17x19x import *


def dir17501950_wifi_2g_thtuput(*args, **kwargs):
  go_url="http://" + kwargs["dut"]["lan_ip_address"]
  
  logger.info('TestCase_ID:{0} TestCase_Desc:{1}'.format(kwargs["test_case"]["id"],kwargs["test_case"]["description"]))

  local_dir1750_wifi2g5g_ch_setup=dir17x19x_wifi_2G5G_Setup()

  local_dir1750_wifi2g5g_ch_setup.dut_Login(go_url,**kwargs)

  # Converting Python dict to kwargs?
  # https://stackoverflow.com/questions/5710391/converting-python-dict-to-kwargs
  local_dir1750_wifi2g5g_ch_setup.wifi_2g_setup(**kwargs) 

  local_dir1750_wifi2g5g_ch_setup.method_close()
  local_dir1750_wifi2g5g_ch_setup.method_teardown()

def dir17501950_wifi_5g_thtuput(*args, **kwargs):
  go_url="http://" + kwargs["dut"]["lan_ip_address"]
  
  logger.info('TestCase_ID:{0} TestCase_Desc:{1}'.format(kwargs["test_case"]["id"],kwargs["test_case"]["description"]))

  local_dir1750_wifi2g5g_ch_setup=dir17x19x_wifi_2G5G_Setup()

  local_dir1750_wifi2g5g_ch_setup.dut_Login(go_url,**kwargs)

  # Converting Python dict to kwargs?
  # https://stackoverflow.com/questions/5710391/converting-python-dict-to-kwargs
  local_dir1750_wifi2g5g_ch_setup.wifi_5g_setup(**kwargs) 

  local_dir1750_wifi2g5g_ch_setup.method_close()
  local_dir1750_wifi2g5g_ch_setup.method_teardown()

def dir17501950_wifi_setup_thruputtest(*args, **kwargs):
  go_url="http://" + kwargs["dut"]["lan_ip_address"]
  
  r = requests.get(go_url,timeout=15)
  logger.info('DUT:{0} Statu_Code:{1}'.format(go_url, str(r.status_code) ))
  page_status_code = r.status_code
  if page_status_code != 200:
    return

  logger.info('TestCase_ID:{0} TestCase_Desc:{1}'.format(kwargs["test_case"]["id"],kwargs["test_case"]["description"]))

  local_dir1750_wifi2g5g_ch_setup=dir17x19x_wifi_2G5G_Setup()
  local_dir1750_wifi2g5g_ch_setup.dut_Login(go_url,**kwargs)

  int_test_case_id= int(kwargs["test_case"]["id"])
  mod_int_test_case_id= (int_test_case_id % 10)

  # Fastest way to check if a value exists in a list
  # https://stackoverflow.com/questions/7571635/fastest-way-to-check-if-a-value-exists-in-a-list
  #
  # config_para["DUT_Config_WLAN"][1]~config_para["DUT_Config_WLAN"][3] 
  # config_para["DUT_Config_WLAN"][6] are WiFi 2G
  # config_para["DUT_Config_WLAN"][4]~config_para["DUT_Config_WLAN"][5] 
  # config_para["DUT_Config_WLAN"][7] are WiFi 5G
  s = set([1,2,3,6])
  for i,x in enumerate([mod_int_test_case_id]):
    if x in s:
      #print("WiFi 2.4G")  
      # Converting Python dict to kwargs?
      # https://stackoverflow.com/questions/5710391/converting-python-dict-to-kwargs
      local_dir1750_wifi2g5g_ch_setup.wifi_2g_setup(**kwargs) 
    else: 
      #print("WiFi 5G")  
      # Converting Python dict to kwargs?
      # https://stackoverflow.com/questions/5710391/converting-python-dict-to-kwargs
      local_dir1750_wifi2g5g_ch_setup.wifi_5g_setup(**kwargs) 

  local_dir1750_wifi2g5g_ch_setup.method_close()
  local_dir1750_wifi2g5g_ch_setup.method_teardown()

if __name__ == '__main__':
  # Get present time
  local_time = time.localtime(time.time())
  start_time = local_time
  #print('Start Time is ', local_time.tm_year,'/',local_time.tm_mon,'/',local_time.tm_mday,' ',local_time.tm_hour,":",local_time.tm_min,":",local_time.tm_sec)
  #logging.error('Begin Time:')
  start_time=str(local_time.tm_year)+'/'+str(local_time.tm_mon)+'/'+str(local_time.tm_mday)+' '+\
              str(local_time.tm_hour)+":"+str(local_time.tm_min)+":"+str(local_time.tm_sec)
  logger.info('Start Time is: {0}'.format(start_time))
  
  # Read json file
  with open('config.json') as f:
    config_para = json.load(f)
  
  #dir17501950_wifi_5g_thtuput(**config_para["DUT_Config_WLAN"][0])

  #dir17501950_wifi_2g_thtuput(**config_para["DUT_Config_WLAN"][0]);#testing purpose
  
  # WiFi 2G Thruput Test
  #dir17501950_wifi_2g_thtuput(**config_para["DUT_Config_WLAN"][1]);pass
  #dir17501950_wifi_2g_thtuput(**config_para["DUT_Config_WLAN"][2]);pass
  #dir17501950_wifi_2g_thtuput(**config_para["DUT_Config_WLAN"][3]);pass

  # WiFi 5G Thruput Test  
  #dir17501950_wifi_5g_thtuput(**config_para["DUT_Config_WLAN"][4]);pass
  #dir17501950_wifi_5g_thtuput(**config_para["DUT_Config_WLAN"][5]);pass

  # WiFi 2G/5G Thruput Test
  # Close and teardown in each DUT setting. 
  #dir17501950_wifi_setup_thruputtest(**config_para["DUT_Config_WLAN"][1]);#pass
  #dir17501950_wifi_setup_thruputtest(**config_para["DUT_Config_WLAN"][2]);#pass
  #dir17501950_wifi_setup_thruputtest(**config_para["DUT_Config_WLAN"][3]);#pass
  #dir17501950_wifi_setup_thruputtest(**config_para["DUT_Config_WLAN"][6]);#pass

  dir17501950_wifi_setup_thruputtest(**config_para["DUT_Config_WLAN"][7]);#pass
  #dir17501950_wifi_setup_thruputtest(**config_para["DUT_Config_WLAN"][4]);#pass
  #dir17501950_wifi_setup_thruputtest(**config_para["DUT_Config_WLAN"][5]);#pass
  
  # WiFi 2G/5G Thruput Test
  # Finally, close and teardown, that is risky.
  #local_dir1750_wifi2g5g_ch_setup=dir17x19x_wifi_2G5G_Setup()
  #local_dir1750_wifi2g5g_ch_setup.wifi_2g5g_setup_thruputtest(**config_para["DUT_Config_WLAN"][1]);#pass
  #local_dir1750_wifi2g5g_ch_setup.wifi_2g5g_setup_thruputtest(**config_para["DUT_Config_WLAN"][2]);#pass
  #local_dir1750_wifi2g5g_ch_setup.wifi_2g5g_setup_thruputtest(**config_para["DUT_Config_WLAN"][3]);#pass

  #local_dir1750_wifi2g5g_ch_setup.wifi_2g5g_setup_thruputtest(**config_para["DUT_Config_WLAN"][4]);#pass
  #local_dir1750_wifi2g5g_ch_setup.wifi_2g5g_setup_thruputtest(**config_para["DUT_Config_WLAN"][5]);#pass

  #local_dir1750_wifi2g5g_ch_setup.method_close()
  #local_dir1750_wifi2g5g_ch_setup.method_teardown()

  # Get the last time
  local_time = time.localtime(time.time())
  #print('Final Time is ', local_time.tm_year,'/',local_time.tm_mon,'/',local_time.tm_mday,' ',local_time.tm_hour,":",local_time.tm_min,":",local_time.tm_sec)
  #logging.error('Finish Time:')
  end_time=str(local_time.tm_year)+'/'+str(local_time.tm_mon)+'/'+str(local_time.tm_mday)+' '+\
            str(local_time.tm_hour)+":"+str(local_time.tm_min)+":"+str(local_time.tm_sec)
  logger.info('End Time is: {0}'.format(end_time))
                