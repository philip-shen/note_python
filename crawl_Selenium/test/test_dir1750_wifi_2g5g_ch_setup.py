# Generated by Selenium IDE
import os,sys
# Refer https://www.pingshiuanchua.com/blog/post/error-handling-in-selenium-on-python
from selenium.common.exceptions import ElementClickInterceptedException

strabspath=os.path.abspath(__file__)
strdirname=os.path.dirname(strabspath)
str_split=os.path.split(strdirname)
prevdirname=str_split[0]
dirnamelib=os.path.join(prevdirname,"lib")
dirnamelog=os.path.join(prevdirname,"logs")
sys.path.append(dirnamelib)

from logger import logger
from readConfig import *
from api_selenium import *
from api_selenium_dir17x19x import *

class Test_dir1750_wifi_2G5G_Setup():
  def __init__(self):
    #self.driver = webdriver.Chrome()
    self.driver = method_selenium()
    
  #def setup_method(self):
  #  self.vars = {}
  
  def method_teardown(self):
    #self.driver.quit()
    self.driver.method_teardown()

  def method_close(self):
    #self.driver.close()  
    self.driver.method_close()
  
  def wifi_Login(self):
    #self.driver.get("http://192.168.0.1/")
    #self.driver.set_window_size(1080, 705)
    #self.driver.find_element(By.ID, "logIn_btn").click()
    self.driver.method_get("http://220.18.1.1/")
    self.driver.method_set_window_size(1080, 705)
    self.driver.method_by_ID_click("logIn_btn")
  
  def sys_Reset(self):
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "menu_Management")))
    element = self.driver.find_element(By.ID, "menu_Management")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()

    self.driver.find_element(By.ID, "menuBtn_Admin").click()
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "page_btn")))
    self.driver.find_element(By.ID, "page_btn").click()
    
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "btn_restorToFactoryDefault")))
    self.driver.find_element(By.ID, "btn_restorToFactoryDefault").click()
    
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "dialogBtn_restorToFactoryDefaultOk")))
    self.driver.find_element(By.ID, "dialogBtn_restorToFactoryDefaultOk").click()
    
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "AlertPopBody")))
    self.driver.find_element(By.ID, "AlertPopBody").click()
    
    #Count down
    WebDriverWait(self.driver, 130000).until(expected_conditions.invisibility_of_element_located((By.ID, "FACTORYDEFAULT")))
    
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "dialogBtn_restorToFactoryDefaultSuccess")))
    self.driver.find_element(By.ID, "dialogBtn_restorToFactoryDefaultSuccess").click()
    
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "btn_agree")))
    self.driver.find_element(By.ID, "btn_agree").click()
    
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "closeCreatePopBtn")))
    self.driver.find_element(By.ID, "closeCreatePopBtn").click()

  def sys_Reboot(self):
    
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "menu_Management")))
    element = self.driver.find_element(By.ID, "menu_Management")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()

    self.driver.find_element(By.ID, "menuBtn_Admin").click()
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "page_btn")))
    self.driver.find_element(By.ID, "page_btn").click()

    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "btn_reboot")))
    self.driver.find_element(By.ID, "btn_reboot").click()
    
    #Wait dialogue
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.XPATH, "//div[@id=\'REBOOTCheck\']/table/tbody/tr/td")))
    
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "dialogBtn_rebootOk")))
    self.driver.find_element(By.ID, "dialogBtn_rebootOk").click()
    
    #Count down
    WebDriverWait(self.driver, 130000).until(expected_conditions.invisibility_of_element_located((By.ID, "REBOOT")))
    
    WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "dialogBtn_rebootSuccess")))
    self.driver.find_element(By.ID, "dialogBtn_rebootSuccess").click()

  def wifi_SmartConnDisable(self):
    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "menu_Settings")))
    #element = self.driver.find_element(By.ID, "menu_Settings")
    #actions = ActionChains(self.driver)
    #actions.move_to_element(element).perform()
    self.driver.method_by_ID_mouseOver("menu_Settings")

    #self.driver.find_element(By.ID, "menuBtn_WiFi").click()
    self.driver.method_by_ID_click("menuBtn_WiFi")

    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#RADIO_smart .chkbox_enabled")))
    #self.driver.find_element(By.CSS_SELECTOR, "#RADIO_smart .chkbox_enabled").click()
    self.driver.method_by_CSS_SELECTOR_click("#RADIO_smart .chkbox_enabled")

    # Extend 2G option page
    #self.driver.find_element(By.CSS_SELECTOR, ".radio24_advBtn > span").click()    
    self.driver.method_by_CSS_SELECTOR_click(".radio24_advBtn > span")

    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#coexistence_24_tr .chkbox_enabled")))
    #self.driver.find_element(By.CSS_SELECTOR, "#coexistence_24_tr .chkbox_enabled").click()
    self.driver.method_by_CSS_SELECTOR_click("#coexistence_24_tr .chkbox_enabled")

    #self.driver.find_element(By.ID, "Save_btn").click()
    self.driver.method_by_ID_click("Save_btn")

    #WebDriverWait(self.driver, 50000).until(expected_conditions.visibility_of_element_located((By.ID, "popalert_ok")))
    #self.driver.find_element(By.ID, "popalert_ok").click()
    self.driver.method_by_ID_click("popalert_ok")

  def wifi_2g_ch_setup(self):
    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "menu_Settings")))   
    #element = self.driver.find_element(By.ID, "menu_Settings")
    #actions = ActionChains(self.driver)
    #actions.move_to_element(element).perform()
    self.driver.method_by_ID_mouseOver("menu_Settings")

    #self.driver.find_element(By.ID, "menuBtn_WiFi").click()
    self.driver.method_by_ID_click("menuBtn_WiFi")

    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".radio24_advBtn > span")))
    #self.driver.find_element(By.CSS_SELECTOR, ".radio24_advBtn > span").click()
    self.driver.method_by_CSS_SELECTOR_click(".radio24_advBtn > span")

    #self.driver.find_element(By.ID, "wifiName_24").clear()
    #self.driver.find_element(By.ID, "password_24").clear()
    #self.driver.find_element(By.ID, "wifiName_24").send_keys("testdlink-2G")
    #self.driver.find_element(By.ID, "password_24").send_keys("00000000")
    self.driver.method_by_ID_type("wifiName_24","testdlink-2G")
    self.driver.method_by_ID_type("password_24","00000000")

    #self.driver.find_element(By.XPATH, "(//a[contains(@href, \'#\')])[8]").click()
    self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[8]")

    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "1")))
    #self.driver.find_element(By.LINK_TEXT, "1").click()
    self.driver.method_by_LinkText_click("11")

    try:
      # Tries to click an element
      self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[10]")
      
    except ElementClickInterceptedException:
      # Use Javascript to scroll down to bottom of page
      #self.driver.method_execute_script("window.scrollTo(0, document.body.scrollHeight);")
      self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[10]")

    self.driver.method_by_LinkText_click("High")

    try:
      # Tries to click an element
      #self.driver.find_element(By.XPATH, "(//a[contains(@href, \'#\')])[12]").click()
      self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[12]")
    except ElementClickInterceptedException:
      # Use Javascript to scroll down to bottom of page
      #driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
      #self.driver.method_execute_script("window.scrollTo(0, document.body.scrollHeight);")
      self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[12]")

    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Auto 20/40 MHz")))
    #self.driver.find_element(By.LINK_TEXT, "Auto 20/40 MHz").click()
    self.driver.method_by_LinkText_click("Auto 20/40 MHz")

    #2019/09/19
    #self.driver.find_element(By.XPATH, "(//a[contains(text(),\'Auto 20/40 MHz\')])[2]").click()
    #self.driver.method_by_XPath_click("(//a[contains(text(),\'Auto 20/40 MHz\')])[2]")

    #self.driver.find_element(By.CSS_SELECTOR, ".radio24_advBtn > span").click()    
    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#coexistence_24_tr .chkbox_enabled")))
    #self.driver.find_element(By.CSS_SELECTOR, "#coexistence_24_tr .chkbox_enabled").click()

    #self.driver.find_element(By.XPATH, "(//a[contains(@href, \'#\')])[14]").click()
    self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[14]")

    # Make 2G visible
    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Visible")))
    #self.driver.find_element(By.LINK_TEXT, "Visible").click()
    self.driver.method_by_LinkText_click("Visible")

    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#RADIO_5 > .advButton > span")))
    #self.driver.find_element(By.CSS_SELECTOR, "#RADIO_5 > .advButton > span").click()
    self.driver.method_by_CSS_SELECTOR_click("#RADIO_5 > .advButton > span")

    #self.driver.find_element(By.ID, "wifiName_5").clear()
    #self.driver.find_element(By.ID, "password_5").clear()
    #self.driver.find_element(By.ID, "wifiName_5").send_keys("testdlink-5G")
    #self.driver.find_element(By.ID, "password_5").send_keys("00000000")
    self.driver.method_by_ID_type("wifiName_5","testdlink-5G")
    self.driver.method_by_ID_type("password_5","00000000")

    # Make 5G invisible
    #self.driver.find_element(By.XPATH, "(//a[contains(@href, \'#\')])[30]").click()
    self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[30]")

    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Invisible")))
    #self.driver.find_element(By.LINK_TEXT, "Invisible").click()
    self.driver.method_by_LinkText_click("Invisible")
    
    #self.driver.find_element(By.ID, "Save_btn").click()
    self.driver.method_by_ID_click("Save_btn")

    #WebDriverWait(self.driver, 50000).until(expected_conditions.visibility_of_element_located((By.ID, "popalert_ok")))
    #self.driver.find_element(By.XPATH, "//button[@id=\'popalert_ok\']").click()
    self.driver.method_by_ID_click("popalert_ok")

  def wifi_5g_ch_setup(self):
    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.ID, "menu_Settings")))   
    #element = self.driver.find_element(By.ID, "menu_Settings")
    #actions = ActionChains(self.driver)
    #actions.move_to_element(element).perform()
    self.driver.method_by_ID_mouseOver("menu_Settings")

    #self.driver.find_element(By.ID, "menuBtn_WiFi").click()
    self.driver.method_by_ID_click("menuBtn_WiFi")
    
    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".radio24_advBtn > span")))
    #self.driver.find_element(By.CSS_SELECTOR, ".radio24_advBtn > span").click()
    self.driver.method_by_CSS_SELECTOR_click(".radio24_advBtn > span")

    #self.driver.find_element(By.ID, "wifiName_24").clear()
    #self.driver.find_element(By.ID, "password_24").clear()
    #self.driver.find_element(By.ID, "wifiName_24").send_keys("testdlink-2G")
    #self.driver.find_element(By.ID, "password_24").send_keys("00000000")
    self.driver.method_by_ID_type("wifiName_24","testdlink-2G")
    self.driver.method_by_ID_type("password_24","00000000")

    #self.driver.find_element(By.XPATH, "//a[@id=\'sbToggle_52664832\']").click()
    #self.driver.find_element(By.XPATH, "(//a[contains(@href, \'#\')])[14]").click()
    #self.driver.find_element(By.LINK_TEXT, "Invisible").click()
    
    # Make 2G Invisible
    self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[14]")
    self.driver.method_by_LinkText_click("Invisible")

    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#RADIO_5 > .advButton > span")))
    #self.driver.find_element(By.CSS_SELECTOR, "#RADIO_5 > .advButton > span").click()
    #self.driver.find_element(By.XPATH, "//div[@id=\'RADIO_5\']/table/tbody/tr[3]").click()
    
    self.driver.method_by_CSS_SELECTOR_click("#RADIO_5 > .advButton > span")

    #self.driver.find_element(By.ID, "wifiName_5").clear()
    #self.driver.find_element(By.ID, "password_5").clear()
    #self.driver.find_element(By.ID, "wifiName_5").send_keys("testdlink-5G")
    #self.driver.find_element(By.ID, "password_5").send_keys("00000000")
    self.driver.method_by_ID_type("wifiName_5","testdlink-5G")
    self.driver.method_by_ID_type("password_5","00000000")

    # Select 5G Security mode    
    #self.driver.find_element(By.XPATH, "(//a[contains(@href, \'#\')])[20]").click()
    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "WPA/WPA2-Personal")))    
    #self.driver.find_element(By.LINK_TEXT, "WPA/WPA2-Personal").click()
    self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[20]")
    #self.driver.method_by_LinkText_click("WPA/WPA2-Personal")
    self.driver.method_by_LinkText_click("WPA3-Personal")

    #self.driver.find_element(By.XPATH, "(//a[contains(@href, \'#\')])[24]").click()
    #self.driver.find_element(By.LINK_TEXT, "149").click()
    self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[24]")
    self.driver.method_by_LinkText_click("36")    

    try:
      # Tries to click an element
      #self.driver.find_element(By.XPATH, "(//a[contains(@href, \'#\')])[28]").click()
      self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[28]")
    except ElementClickInterceptedException:
      # Use Javascript to scroll down to bottom of page
      #driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
      #self.driver.method_execute_script("window.scrollTo(0, document.body.scrollHeight);")
      self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[28]")

    #WebDriverWait(self.driver, 5000).until(expected_conditions.visibility_of_element_located((By.XPATH, "(//a[contains(text(),\'Auto 20/40/80 MHz\')])[2]")))    
    #self.driver.find_element(By.XPATH, "(//a[contains(text(),\'Auto 20/40/80 MHz\')])[2]").click()
    self.driver.method_by_LinkText_click("Auto 20/40/80 MHz")

    # Make 5G Invisible
    #self.driver.find_element(By.XPATH, "(//a[contains(@href, \'#\')])[30]").click()
    #self.driver.find_element(By.LINK_TEXT, "Visible").click()
    self.driver.method_by_XPath_click("(//a[contains(@href, \'#\')])[30]")
    self.driver.method_by_LinkText_click("Visible")

    #self.driver.find_element(By.ID, "Save_btn").click()
    self.driver.method_by_ID_click("Save_btn")

    #WebDriverWait(self.driver, 50000).until(expected_conditions.visibility_of_element_located((By.ID, "popalert_ok")))
    #self.driver.find_element(By.ID, "popalert_ok").click()
    self.driver.method_by_ID_click("popalert_ok")

if __name__ == '__main__':
  local_dir1750_wifi_Setup=Test_dir1750_wifi_2G5G_Setup()

  local_dir1750_wifi_Setup.wifi_Login()
  #local_dir1750_wifi_Setup.sys_Reset()
  #local_dir1750_wifi_Setup.sys_Reboot()

  #local_dir1750_wifi_Setup.wifi_SmartConnDisable()
  #local_dir1750_wifi_Setup.wifi_2g_ch_setup()
  local_dir1750_wifi_Setup.wifi_5g_ch_setup()

  #local_dir1750_wifi_Setup.wifi_2g_ch_setup()
  #local_dir1750_wifi_Setup.wifi_5g_ch_setup()

  local_dir1750_wifi_Setup.method_close()
  local_dir1750_wifi_Setup.method_teardown()